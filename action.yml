name: 'Generate and Commit Docs'

inputs:
  source-path:
    description: 'Source path containing the .h files'
    required: true
  target-path:
    description: 'Target path or file for the markdown documentation'
    required: true
  exclude-pattern:
    description: 'Pattern for excluding files (e.g. "*/test/*")'
  include-cpp:
    description: 'Include .cpp files'
    default: false
  fail-on-warnings:
    description: 'Fail when documentation warnings are issued.'
    default: false
  commit:
    description: 'Boolean flag to indicate whether to commit changes'
    default: false
  commit-message:
    description: 'Commit message'
    default: 'Update documentation'
  debug:
    description: 'Enable debugging mode to provide additional output'
    default: false

runs:
  using: "composite"

  steps:
  - name: Install doxygen dependencies
    shell: bash
    run: |
      # Import LLVM GPG key without using apt-key
      wget -q -O - https://apt.llvm.org/llvm-snapshot.gpg.key | gpg --dearmor -o /usr/share/keyrings/llvm-archive-keyring.gpg

      # Add the LLVM repository with the GPG keyring
      echo "deb [signed-by=/usr/share/keyrings/llvm-archive-keyring.gpg] http://apt.llvm.org/focal/ llvm-toolchain-focal-9 main" | sudo tee /etc/apt/sources.list.d/llvm.list > /dev/null
      
      # Update the package lists
      sudo apt-get -qq update

      # Install libclang and other necessary packages
      sudo apt-get -qq install -y libclang1-9 libclang-cpp9 > /dev/null

  - name: Set up Node.js
    uses: actions/setup-node@v4
    with:
      node-version: 16
      
  - name: Install render-docs
    shell: bash
    run: npm install github:sebromero/render-docs --no-save --silent

  - name: Cache Doxygen binaries
    id: cache-doxygen-binaries
    uses: actions/cache@v2
    with:
      path: |
        node_modules/doxygen/dist
      key: ${{ runner.os }}-doxygen-binaries-${{ hashFiles('node_modules/doxygen/lib/constants.js') }}

  - name: Download Doxygen
    shell: bash
    run: echo "Doxygen should be downloaded."
    if: steps.cache-doxygen-binaries.outputs.cache-hit != 'true'

  - name: Run Docs Generation
    shell: bash
    run: |
      npx render-docs \
        -- ${{ inputs.source-path }} \
        ${{ inputs.target-path }} \
        ${{ inputs.exclude-pattern && format('-e {0}', inputs.exclude-pattern) || '' }} \
        ${{ inputs.include-cpp && '-c' || '' }} \
        ${{ inputs.fail-on-warnings && '--fail-on-warnings' || '' }} \
        ${{ inputs.debug && '-d' || '' }}

  - name: Commit Docs
    shell: bash
    if: inputs.commit
    run: |
      git config --global user.email "action@github.com"
      git config --global user.name "GitHub Action"
      TARGET_PATH=${{ inputs.target-path }}
      if [ -d "$TARGET_PATH" ]; then
        git add "$TARGET_PATH/*"
      elif [ -f "$TARGET_PATH" ]; then
        git add "$TARGET_PATH"
      fi
      git commit -m "${{ inputs.commit-message }}"
      git push
